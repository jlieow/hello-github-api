name: Get github commit details
on:
    push:
        tags:
            - "platform/*/userid/*/terraformx/*/dir/*/v/*"

jobs:
    get_github_details:
        runs-on: ubuntu-latest
        steps:
            - name: Get tag annotation and retrieve secrets
              env:
                GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              id: tagger
              run: |
                  # Gets Git tag reference which contains an annotated tag object reference
                  # Retrieves URL from annotated tag object reference
                  # Retrieves annotated tag message from the URL which contains a JSON string with the keys "env" and "user_id"
                  # Use "env" value to determine which cloud environment to authenticate to
                  # Use the "user_id" value to retrieve the credentials and sign into the cloud environment

                  getRefFromTag="https://api.github.com/repos/jlieow/hello-github-api/git/${GITHUB_REF#}"
                  echo $getRefFromTag

                  tag_response=$(gh api --header 'Accept: application/vnd.github+json' --header 'X-GitHub-Api-Version:2022-11-28' --method GET $getRefFromTag)

                  url=$(echo $tag_response | jq -r '.object | "\(.url)"')

                  # echo "url : $url"

                  tag_annotations=$(gh api --header 'Accept: application/vnd.github+json' --header 'X-GitHub-Api-Version:2022-11-28' --method GET $url)

                  # echo "tag_annotations : $tag_annotations"

                  tagger_response=$(echo $tag_annotations | jq -r '.tagger')
                  message=$(echo $tag_annotations | jq -r '.message')

                  env=$(echo $message | jq --arg key env -r '.[$key]')
                  user_id=$(echo $message | jq --arg key user_id -r '.[$key]')
                  dir=$(echo $message | jq --arg key dir -r '.[$key]')

                  secrets=$(cat <<EOF
                  ${{ toJson(secrets) }}
                  EOF
                  )

                  echo "user_id=$user_id" >> $GITHUB_ENV
                  echo "dir=$dir" >> $GITHUB_ENV

                  if [ "$env" == "aws" ]; then
                    echo "Running aws configure."

                    aws_access_key_id=$(echo $secrets | jq --arg key "${user_id}_AWS_ACCESS_KEY_ID" -r '.[$key]')
                    aws_secret_access_key=$(echo $secrets | jq --arg key "${user_id}_AWS_SECRET_ACCESS_KEY" -r '.[$key]')
                    profile_name=$(echo $secrets | jq --arg key "${user_id}_AWS_PROFILE_NAME" -r '.[$key]')
                    slack_bot_user_oauth_token=$(echo $secrets | jq --arg key "${user_id}_SLACK_BOT_USER_OAUTH_TOKEN" -r '.[$key]')
                    slack_channel_id=$(echo $secrets | jq --arg key "${user_id}_SLACK_CHANNEL_ID" -r '.[$key]')

                    aws configure set aws_access_key_id $aws_access_key_id --profile $profile_name
                    aws configure set aws_secret_access_key $aws_secret_access_key --profile $profile_name

                    echo "aws_access_key_id=$aws_access_key_id" >> $GITHUB_ENV
                    echo "aws_secret_access_key=$aws_secret_access_key" >> $GITHUB_ENV
                    echo "profile_name=$profile_name" >> $GITHUB_ENV
                    echo "slack_bot_user_oauth_token=$slack_bot_user_oauth_token" >> $GITHUB_ENV
                    echo "slack_channel_id=$slack_channel_id" >> $GITHUB_ENV

                    echo "AWS profile configured."
                  fi

                  if [ "$env" == "az" ]; then
                    echo "Running az login."

                    echo $secrets | jq --arg key "${user_id}_AZ_CLIENT_ID" -r '.[$key]'
                    echo $secrets | jq --arg key "${user_id}_AZ_CLIENT_SECRET" -r '.[$key]'
                    echo $secrets | jq --arg key "${user_id}_AZ_TENANT_ID" -r '.[$key]'
                    echo $secrets | jq --arg key "${user_id}_AZ_SUBSCRIPTION_ID" -r '.[$key]'

                    echo "Logged in."
                  fi

                  if [ "$env" == "gcp" ]; then
                    echo "Running gcp auth."
                    echo "Authenticated through gcp auth."
                  fi

              shell: bash

            - name: Checkout
              uses: actions/checkout@v3

            - name: Replace profile
              run: |
                  sed -i 's/profile = ".*"/profile = "${{ env.profile_name }}"/g' ec2/backend.tfvars
              shell: bash

            - name: Perform Terraformx Apply
              id: terraformx_apply
              uses: jlieow/terraformx_apply@V1 # Uses an action in the repo terraformx_apply owned by jlieow tagged as V1
              with:
                dir: ${{ env.dir }} # Remember to set the tag dir too

            - name: Inform Slack user of completed action
              run: |
                  curl --request POST https://slack.com/api/chat.postMessage?channel=${{ env.slack_channel_id }} \
                  -H "Accept: application/json" \
                  -H "Content-Type: application/json" \
                  -H "Authorization: Bearer ${{ env.slack_bot_user_oauth_token }}"
                  -d "{ \"text\" : \"Terraform provisioned!\" }"
              shell: bash

