name: Get github commit details
on:
    push:
        # tags:
        #     - "platform/*/userid/*/terraformx/*/dir/*/v/*"

jobs:
    get_github_details:
        runs-on: ubuntu-latest
        steps:
            - name: Get tag annotation and retrieve secrets
              env:
                  GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
              id: tagger
              run: |
                  # Gets Git tag reference which contains an annotated tag object reference
                  # Retrieves URL from annotated tag object reference
                  # Retrieves annotated tag message from the URL which contains a JSON string with the keys "env" and "user_id"
                  # Use "env" value to determine which cloud environment to authenticate to
                  # Use the "user_id" value to retrieve the credentials and sign into the cloud environment

                  tag_response=$(gh api --header 'Accept: application/vnd.github+json' --header 'X-GitHub-Api-Version:2022-11-28' --method GET /repos/jlieow/hello-github-api/git/refs/tags/platform/slack/userid/U041VQM5ZTK/terraformx/apply/dir/ec2/v/3)

                  url=$(echo $tag_response | jq -r '.object | "\(.url)"')

                  echo "url : $url"

                  tag_annotations=$(gh api --header 'Accept: application/vnd.github+json' --header 'X-GitHub-Api-Version:2022-11-28' --method GET $url)

                  echo "tag_annotations : $tag_annotations"

                  tagger_response=$(echo $tag_annotations | jq -r '.tagger')
                  message=$(echo $tag_annotations | jq -r '.message')

                  env=$(echo $message | jq --arg key env -r '.[$key]')
                  user_id=$(echo $message | jq --arg key user_id -r '.[$key]')
                  dir=$(echo $message | jq --arg key dir -r '.[$key]')

                  secrets=$(cat <<EOF
                  ${{ toJson(secrets) }}
                  EOF
                  )

                  echo "env: $env"
                  echo "user_id: $user_id"
                  echo "dir: $dir"
                  echo "secrets: $secrets"
              shell: bash

            # - name: See if aws profile configured in previous step exists
            #   run: |
            #       aws configure list
            #   shell: bash

            # - name: Checkout
            #   uses: actions/checkout@v3

            # - name: Replace profile
            #   run: |
            #       echo "--- get aws profile: ${{ env.profile_name }}"

            #       echo "--- backend.tfvars before replacing string"
            #       cat ec2/backend.tfvars

            #       # sed command works differently in linux and mac. You can omit the '' in linux but not in mac.
            #       # Equivalent command in mac is: sed -i '' 's/profile = ".*"/profile = "replace"/g' ec2/backend.tfvars
            #       sed -i 's/profile = ".*"/profile = "replace"/g' ec2/backend.tfvars

            #       echo "-- backend.tfvars after replacing string"
            #       cat ec2/backend.tfvars
            #   shell: bash
